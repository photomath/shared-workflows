name: 'NPM Docker Deploy'

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      name:
        required: true
        type: string
    secrets:
      registry-token:
        required: true
      github-token:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
    - name: Check out source
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: v0.9.1

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ inputs.registry }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: _json_key
        password: ${{ secrets.registry-token }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.registry }}/${{ inputs.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=raw,enable=${{ github.ref == 'refs/heads/master' }},value=staging
          type=raw,enable=${{ github.ref == 'refs/heads/stable' }},value=production
          type=raw,enable=${{ github.ref == 'refs/heads/dev' }},value=dev
          type=sha

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha
        build-args: |
          NPM_TOKEN=${{secrets.github-token}}

    # - name: Tag prepare
    #   if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/dev')
    #   id: tagPrepare
    #   run: |
    #     if [ github.ref == 'refs/heads/stable' ]
    #     then
    #       echo ::set-output name=tag::production
    #     elif [ github.ref == 'refs/heads/dev' ]
    #     then
    #       echo ::set-output name=tag::dev
    #     else
    #       echo ::set-output name=tag::staging
    #     fi

    # - name: Tagging
    #   if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/dev')
    #   uses: mathieudutour/github-tag-action@v5.6
    #   with:
    #     github_token: ${{ secrets.github-token }}
    #     custom_tag: ${{ steps.tagPrepare.outputs.tag }}
    #     create_annotated_tag: true
